# パイザ氏は世界を股にかけるエリートビジネスマンです。
# この夏も毎日世界各地を飛行機で飛び回る予定です。そんなパイザ氏が最も恐れていることが、時差ボケです。
# そこで、パイザ氏の時差ボケを予測するために、彼の N 日間の旅程のうち、「パイザ氏の 1 日の時間」の最も長い日と最も短い日について、その時間を求めてください。
# 
# 「パイザ氏の 1 日の時間」とは、パイザ氏が滞在している場所の時計で 0 時を見てから、移動した場合は移動先の時計で次の日の 0 時を見るまでの時間です。
# 異なるタイムゾーンに移動した場合、長くなったり短くなったりします（以下の例も参考にしてください）。
# 
# ただし、パイザ氏は飛行機の中で眠るのが大嫌いなので、飛行機の機内で日付をまたぐことがないように予定を立てていて、
# 飛行機に乗った時の現地時刻での日付と飛行機から降りた時の現地時刻での日付は常に同じであるものとします。
# 例えば、入力例 1 では、1 日目に国 A を現地時間 朝 7 時に出国し、5 時間のフライトののち国 B に現地時間 12 時に到着します。
# この時、国 A と国 B では時差がなく、この日の「パイザ氏の 1 日の時間」は、国 A で過ごす 7 時間、飛行機に乗っている 5 時間、国 B で過ごす 12 時間の合計 24 時間となります。
# 
# 2 日目は国 B を現地時間 朝 10 時に出国し、6 時間のフライトののち国 C に現地時間 20 時に到着します。
# この時、国 B と国 C には 4 時間の時差があり（国 C の方が進んでいる）、この日の「パイザ氏の 1 日の時間」は、国 B で過ごす 10 時間、
# 飛行機に乗っている 6 時間、国 C で過ごす 4 時間の合計 20 時間となります。
# 
# 3 日目は国 C を現地時間 昼 12 時に出国し、3 時間のフライトののち国 D に現地時間 8 時に到着します。
# この時、国 C と国 D には 7 時間の時差があり（国 D の方が遅れている）、この日の「パイザ氏の 1 日の時間」は、
# 国 C で過ごす 12 時間、飛行機に乗っている 3 時間、国 D で過ごす 16 時間の合計 31 時間となります。
# 
# よって、この 3 日間のうち「パイザ氏の 1 日の時間」が最も短いのは 2 日目の 20 時間、最も長いのは 3 日目の 31 時間なので、
# 20
# 31
# と出力すると正答となります。

taizai = []
days = int(input())
for i in range(days):
    times = input().split(' ')
    taizai.append(int(times[0]) + int(times[1]) + (24 - int(times[2])))

print(min(taizai))
print(max(taizai))